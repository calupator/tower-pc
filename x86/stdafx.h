#pragma once

// config stuff goes here
//#define X86_SUPPORT_8086
#define X86_SUPPORT_186
//#define X86_SUPPORT_286
//#define X86_SUPPORT_386
#define X86_SUPPORT_486
//#define X86_SUPPORT_P1
// and stops here

#include "zildjohn01.h"
#include "..\TowerGlobals.h"

#ifdef _MSC_VER
	#define X86_IN_MSC _MSC_VER
#endif

#define CONCAT(x, y) CONCAT1(x, y)
#define CONCAT1(x, y) CONCAT2(x, y)
#define CONCAT2(x, y) CONCAT3(x, y)
#define CONCAT3(x, y) x##y

#define X86_8086 100
#define X86_186 150
#define X86_286 200
#define X86_386 300
#define X86_486 350
#define X86_P1 400 // pentium

/*#ifdef X86_SUPPORT_X86_8086
	#define X86_COMPILE_100 // 8086
#endif
#ifdef X86_SUPPORT_X86_186
	#define X86_COMPILE_150 // 186
#endif
#ifdef X86_SUPPORT_X86_286
	#define X86_COMPILE_200 // 286
#endif
#ifdef X86_SUPPORT_X86_386
	#define X86_COMPILE_300 // 386
#endif
#ifdef X86_SUPPORT_X86_486
	#define X86_COMPILE_350 // 486
#endif
#ifdef X86_SUPPORT_P1
	#define X86_COMPILE_400
#endif*/

#define MRM_SWITCH_SLASH(x) switch(x) {
#define MRM_SLASH_0 case 0x00: case 0x01: case 0x02: case 0x03: case 0x04: case 0x05: case 0x06: case 0x07: \
					case 0x40: case 0x41: case 0x42: case 0x43: case 0x44: case 0x45: case 0x46: case 0x47: \
					case 0x80: case 0x81: case 0x82: case 0x83: case 0x84: case 0x85: case 0x86: case 0x87: \
					case 0xc0: case 0xc1: case 0xc2: case 0xc3: case 0xc4: case 0xc5: case 0xc6: case 0xc7
#define MRM_SLASH_1 case 0x08: case 0x09: case 0x0a: case 0x0b: case 0x0c: case 0x0d: case 0x0e: case 0x0f: \
					case 0x48: case 0x49: case 0x4a: case 0x4b: case 0x4c: case 0x4d: case 0x4e: case 0x4f: \
					case 0x88: case 0x89: case 0x8a: case 0x8b: case 0x8c: case 0x8d: case 0x8e: case 0x8f: \
					case 0xc8: case 0xc9: case 0xca: case 0xcb: case 0xcc: case 0xcd: case 0xce: case 0xcf
#define MRM_SLASH_2 case 0x10: case 0x11: case 0x12: case 0x13: case 0x14: case 0x15: case 0x16: case 0x17: \
					case 0x50: case 0x51: case 0x52: case 0x53: case 0x54: case 0x55: case 0x56: case 0x57: \
					case 0x90: case 0x91: case 0x92: case 0x93: case 0x94: case 0x95: case 0x96: case 0x97: \
					case 0xd0: case 0xd1: case 0xd2: case 0xd3: case 0xd4: case 0xd5: case 0xd6: case 0xd7
#define MRM_SLASH_3 case 0x18: case 0x19: case 0x1a: case 0x1b: case 0x1c: case 0x1d: case 0x1e: case 0x1f: \
					case 0x58: case 0x59: case 0x5a: case 0x5b: case 0x5c: case 0x5d: case 0x5e: case 0x5f: \
					case 0x98: case 0x99: case 0x9a: case 0x9b: case 0x9c: case 0x9d: case 0x9e: case 0x9f: \
					case 0xd8: case 0xd9: case 0xda: case 0xdb: case 0xdc: case 0xdd: case 0xde: case 0xdf
#define MRM_SLASH_4 case 0x20: case 0x21: case 0x22: case 0x23: case 0x24: case 0x25: case 0x26: case 0x27: \
					case 0x60: case 0x61: case 0x62: case 0x63: case 0x64: case 0x65: case 0x66: case 0x67: \
					case 0xa0: case 0xa1: case 0xa2: case 0xa3: case 0xa4: case 0xa5: case 0xa6: case 0xa7: \
					case 0xe0: case 0xe1: case 0xe2: case 0xe3: case 0xe4: case 0xe5: case 0xe6: case 0xe7
#define MRM_SLASH_5 case 0x28: case 0x29: case 0x2a: case 0x2b: case 0x2c: case 0x2d: case 0x2e: case 0x2f: \
					case 0x68: case 0x69: case 0x6a: case 0x6b: case 0x6c: case 0x6d: case 0x6e: case 0x6f: \
					case 0xa8: case 0xa9: case 0xaa: case 0xab: case 0xac: case 0xad: case 0xae: case 0xaf: \
					case 0xe8: case 0xe9: case 0xea: case 0xeb: case 0xec: case 0xed: case 0xee: case 0xef
#define MRM_SLASH_6 case 0x30: case 0x31: case 0x32: case 0x33: case 0x34: case 0x35: case 0x36: case 0x37: \
					case 0x70: case 0x71: case 0x72: case 0x73: case 0x74: case 0x75: case 0x76: case 0x77: \
					case 0xb0: case 0xb1: case 0xb2: case 0xb3: case 0xb4: case 0xb5: case 0xb6: case 0xb7: \
					case 0xf0: case 0xf1: case 0xf2: case 0xf3: case 0xf4: case 0xf5: case 0xf6: case 0xf7
#define MRM_SLASH_7 case 0x38: case 0x39: case 0x3a: case 0x3b: case 0x3c: case 0x3d: case 0x3e: case 0x3f: \
					case 0x78: case 0x79: case 0x7a: case 0x7b: case 0x7c: case 0x7d: case 0x7e: case 0x7f: \
					case 0xb8: case 0xb9: case 0xba: case 0xbb: case 0xbc: case 0xbd: case 0xbe: case 0xbf: \
					case 0xf8: case 0xf9: case 0xfa: case 0xfb: case 0xfc: case 0xfd: case 0xfe: case 0xff
#define MRM_END_SWITCH_SLASH }

#define MRM_SWITCH_ROW(byte) MRM_SWITCH_SLASH(byte)
#define MRM_ROW_00 case 0x00: case 0x08: case 0x10: case 0x18: case 0x20: case 0x28: case 0x30: case 0x38
#define MRM_ROW_01 case 0x01: case 0x09: case 0x11: case 0x19: case 0x21: case 0x29: case 0x31: case 0x39
#define MRM_ROW_02 case 0x02: case 0x0a: case 0x12: case 0x1a: case 0x22: case 0x2a: case 0x32: case 0x3a
#define MRM_ROW_03 case 0x03: case 0x0b: case 0x13: case 0x1b: case 0x23: case 0x2b: case 0x33: case 0x3b
#define MRM_ROW_04 case 0x04: case 0x0c: case 0x14: case 0x1c: case 0x24: case 0x2c: case 0x34: case 0x3c
#define MRM_ROW_05 case 0x05: case 0x0d: case 0x15: case 0x1d: case 0x25: case 0x2d: case 0x35: case 0x3d
#define MRM_ROW_06 case 0x06: case 0x0e: case 0x16: case 0x1e: case 0x26: case 0x2e: case 0x36: case 0x3e
#define MRM_ROW_07 case 0x07: case 0x0f: case 0x17: case 0x1f: case 0x27: case 0x2f: case 0x37: case 0x3f
#define MRM_ROW_40 case 0x40: case 0x48: case 0x50: case 0x58: case 0x60: case 0x68: case 0x70: case 0x78
#define MRM_ROW_41 case 0x41: case 0x49: case 0x51: case 0x59: case 0x61: case 0x69: case 0x71: case 0x79
#define MRM_ROW_42 case 0x42: case 0x4a: case 0x52: case 0x5a: case 0x62: case 0x6a: case 0x72: case 0x7a
#define MRM_ROW_43 case 0x43: case 0x4b: case 0x53: case 0x5b: case 0x63: case 0x6b: case 0x73: case 0x7b
#define MRM_ROW_44 case 0x44: case 0x4c: case 0x54: case 0x5c: case 0x64: case 0x6c: case 0x74: case 0x7c
#define MRM_ROW_45 case 0x45: case 0x4d: case 0x55: case 0x5d: case 0x65: case 0x6d: case 0x75: case 0x7d
#define MRM_ROW_46 case 0x46: case 0x4e: case 0x56: case 0x5e: case 0x66: case 0x6e: case 0x76: case 0x7e
#define MRM_ROW_47 case 0x47: case 0x4f: case 0x57: case 0x5f: case 0x67: case 0x6f: case 0x77: case 0x7f
#define MRM_ROW_80 case 0x80: case 0x88: case 0x90: case 0x98: case 0xa0: case 0xa8: case 0xb0: case 0xb8
#define MRM_ROW_81 case 0x81: case 0x89: case 0x91: case 0x99: case 0xa1: case 0xa9: case 0xb1: case 0xb9
#define MRM_ROW_82 case 0x82: case 0x8a: case 0x92: case 0x9a: case 0xa2: case 0xaa: case 0xb2: case 0xba
#define MRM_ROW_83 case 0x83: case 0x8b: case 0x93: case 0x9b: case 0xa3: case 0xab: case 0xb3: case 0xbb
#define MRM_ROW_84 case 0x84: case 0x8c: case 0x94: case 0x9c: case 0xa4: case 0xac: case 0xb4: case 0xbc
#define MRM_ROW_85 case 0x85: case 0x8d: case 0x95: case 0x9d: case 0xa5: case 0xad: case 0xb5: case 0xbd
#define MRM_ROW_86 case 0x86: case 0x8e: case 0x96: case 0x9e: case 0xa6: case 0xae: case 0xb6: case 0xbe
#define MRM_ROW_87 case 0x87: case 0x8f: case 0x97: case 0x9f: case 0xa7: case 0xaf: case 0xb7: case 0xbf
#define MRM_ROW_C0 case 0xc0: case 0xc8: case 0xd0: case 0xd8: case 0xe0: case 0xe8: case 0xf0: case 0xf8
#define MRM_ROW_C1 case 0xc1: case 0xc9: case 0xd1: case 0xd9: case 0xe1: case 0xe9: case 0xf1: case 0xf9
#define MRM_ROW_C2 case 0xc2: case 0xca: case 0xd2: case 0xda: case 0xe2: case 0xea: case 0xf2: case 0xfa
#define MRM_ROW_C3 case 0xc3: case 0xcb: case 0xd3: case 0xdb: case 0xe3: case 0xeb: case 0xf3: case 0xfb
#define MRM_ROW_C4 case 0xc4: case 0xcc: case 0xd4: case 0xdc: case 0xe4: case 0xec: case 0xf4: case 0xfc
#define MRM_ROW_C5 case 0xc5: case 0xcd: case 0xd5: case 0xdd: case 0xe5: case 0xed: case 0xf5: case 0xfd
#define MRM_ROW_C6 case 0xc6: case 0xce: case 0xd6: case 0xde: case 0xe6: case 0xee: case 0xf6: case 0xfe
#define MRM_ROW_C7 case 0xc7: case 0xcf: case 0xd7: case 0xdf: case 0xe7: case 0xef: case 0xf7: case 0xff
#define MRM_END_SWITCH_ROW MRM_END_SWITCH_SLASH

namespace Tower { namespace X86 {
	extern const PlugInitData *plug;
	extern const CpuInitData *plug_cpu;
	extern const void *plug_persist;
}}