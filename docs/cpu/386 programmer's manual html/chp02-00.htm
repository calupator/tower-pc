<html>
<head>
<title>
Chapter 2  Basic Programming Model
</title>
<body>
Prev: <a href="chp01-03.htm">1.3  Notational Conventions</a><br>
Next: <a href="chp02-01.htm">2.1  Memory Organization and Segmentation</a>
<hr>
<h2>
Chapter 2  Basic Programming Model
</h2>
<hr><p>
This chapter describes the 80386 application programming environment as
seen by assembly language programmers when the processor is executing in
protected mode. The chapter introduces programmers to those features of the
80386 architecture that directly affect the design and implementation of
80386 applications programs. Other chapters discuss 80386 features that
relate to systems programming or to compatibility with other processors of
the 8086 family.
<p>
The basic programming model consists of these aspects:
</p>
<pre>
  Memory organization and segmentation
  Data types
  Registers
  Instruction format
  Operand selection
  Interrupts and exceptions
</pre><p>
Note that input/output is not included as part of the basic programming
model. Systems designers may choose to make I/O instructions available to
applications or may choose to reserve these functions for the operating
system. For this reason, the I/O features of the 80386 are discussed in Part
II.
<p>
This chapter contains a section for each aspect of the architecture that is
normally visible to applications.
</p>
<ul>
<li><a href="chp02-01.htm#02-01">2.1  Memory Organization and Segmentation</a>
<li> <a href="chp02-01.htm#02-01-01">2.1.1  The "Flat" Model</a>
<li> <a href="chp02-01.htm#02-01-02">2.1.2  The Segmented Model</a>
<li><a href="chp02-02.htm#02-02">2.2  Data Types</a>
<li><a href="chp02-03.htm#02-03">2.3  Registers</a>
<li> <a href="chp02-03.htm#02-03-01">2.3.1  General Registers</a>
<li> <a href="chp02-03.htm#02-03-02">2.3.2  Segment Registers</a>
<li> <a href="chp02-03.htm#02-03-03">2.3.3  Stack Implementation</a>
<li> <a href="chp02-03.htm#02-03-04">2.3.4  Flags Register</a>
<li>  <a href="chp02-03.htm#02-03-04-01">2.3.4.1  Status Flags</a>
<li>  <a href="chp02-03.htm#02-03-04-02">2.3.4.2  Control Flag</a>
<li>  <a href="chp02-03.htm#02-03-04-03">2.3.4.3  Instruction Pointer</a>
<li><a href="chp02-04.htm#02-04">2.4  Instruction Format</a>
<li><a href="chp02-05.htm#02-05">2.5  Operand Selection</a>
<li> <a href="chp02-05.htm#02-05-01">2.5.1  Immediate Operands</a>
<li> <a href="chp02-05.htm#02-05-02">2.5.2  Register Operands</a>
<li> <a href="chp02-05.htm#02-05-03">2.5.3  Memory Operands</a>
<li>  <a href="chp02-05.htm#02-05-03-01">2.5.3.1  Segment Selection</a>
<li>  <a href="chp02-05.htm#02-05-03-02">2.5.3.2  Effective-Address Computation</a>
<li><a href="chp02-06.htm#02-06">2.6  Interrupts and Exceptions</a>
<li><a href="chp02-02.htm#F-02-01">Figure  2-1.   Two-Component Pointer</a>
<li><a href="chp02-02.htm#F-02-02">Figure  2-2.   Fundamental Data Types</a>
<li><a href="chp02-02.htm#F-02-03">Figure  2-3.   Bytes, Words, and Doublewords in Memory</a>
<li><a href="chp02-02.htm#F-02-04">Figure  2-4.   80386 Data Types</a>
<li><a href="chp02-03.htm#F-02-05">Figure  2-5.   80386 Applications Register Set</a>
<li><a href="chp02-03.htm#F-02-06">Figure  2-6.   Use of Memory Segmentation</a>
<li><a href="chp02-03.htm#F-02-07">Figure  2-7.   80386 Stack</a>
<li><a href="chp02-03.htm#F-02-08">Figure  2-8.   EFLAGS Register  </a>
<li><a href="chp02-03.htm#F-02-09">Figure  2-9.   Instruction Pointer Register</a>
<li><a href="chp02-05.htm#F-02-10">Figure  2-10.  Effective Address Computation</a>
<li><a href="chp02-05.htm#T-02-01">Table   2-1.   Default Segment Register Selection Rules</a>
<li><a href="chp02-06.htm#T-02-02">Table   2-2.   80386 Reserved Exceptions and Interrupts</a>
</ul>
<hr>
Prev: <a href="chp01-03.htm">1.3  Notational Conventions</a>
Next: <a href="chp02-01.htm">2.1  Memory Organization and Segmentation
</body>
</html>
