<html>
<head>
<title>
Chapter 5  Memory Management
</title>
<body>
Prev: <a href="chp04-02.htm">4.2  Systems Instructions</a><br><br>
Next: <a href="chp05-01.htm">5.1  Segment Translation</a>
<hr>
<h2>
Chapter 5  Memory Management
</h2>
<hr>
<p>
The 80386 transforms logical addresses (i.e., addresses as viewed by
programmers) into physical address (i.e., actual addresses in physical
memory) in two steps:
</p><ul>
<li> Segment translation, in which a logical address (consisting of a
     segment selector and segment offset) are converted to a linear address.
<li> Page translation, in which a linear address is converted to a physical
     address. This step is optional, at the discretion of systems-software
     designers.
</ul><p>
These translations are performed in a way that is not visible to
applications programmers. Figure 5-1 illustrates the two translations at a
high level of abstraction.
<p>
Figure 5-1 and the remainder of this chapter present a simplified view of
the 80386 addressing mechanism. In reality, the addressing mechanism also
includes memory protection features. For the sake of simplicity, however,
the subject of protection is taken up in another chapter, Chapter 6.
</p>
<a name="F-05-01"></a>
<h3>Figure 5-1.  Address Translation Overview</h3>
<pre>
             15           0      31                           0
    LOGICAL +---------------+   +------------------------------+
    ADDRESS |    SELECTOR   |   |            OFFSET            |
            +---------------+   +---+--------------------------+
                                    !
                     +------------------------------+
                     |     SEGMENT TRANSLATION      |
                     +--------------+---------------+
                                 +--+-+       PAGING ENABLED
                                 |PG ?|--------------------+
                                 +--+-+                    |
                   31        PAGING ! DISABLED       0     |
          LINEAR  +-----------+-----------+-----------+    |
          ADDRESS |    DIR    |   PAGE    |  OFFSET   |    |
                  +-----------+-----+-----+-----------+    |
                                    !                      |
                     +------------------------------+      |
                     |       PAGE TRANSLATION       |      |
                     +--------------+---------------+      |
                                    |<---------------------+
                      31            !              0
            PHYSICAL +------------------------------+
            ADDRESS  |                              |
                     +------------------------------+
</pre></pre>
<hr><ul>
<li><a href="chp05-01.htm#05-01">5.1  Segment Translation</a>
<li>    <a href="chp05-01.htm#05-01-01">5.1.1  Descriptors</a>
<li>    <a href="chp05-01.htm#05-01-02">5.1.2  Descriptor Tables</a>
<li>    <a href="chp05-01.htm#05-01-03">5.1.3  Selectors</a>
<li>    <a href="chp05-01.htm#05-01-04">5.1.4  Segment Registers</a>
<li><a href="chp05-02.htm#05-02">5.2  Page Translation</a>
<li>    <a href="chp05-02.htm#05-02-01">5.2.1  Page Frame</a>
<li>    <a href="chp05-02.htm#05-02-02">5.2.2  Linear Address</a>
<li>    <a href="chp05-02.htm#05-02-03">5.2.3  Page Tables</a>
<li>    <a href="chp05-02.htm#05-02-04">5.2.4  Page-Table Entries</a>
<li>        <a href="chp05-02.htm#05-02-04-01">5.2.4.1  Page Frame Address</a>
<li>        <a href="chp05-02.htm#05-02-04-02">5.2.4.2  Present Bit</a>
<li>        <a href="chp05-02.htm#05-02-04-03">5.2.4.3  Accessed and Dirty Bits</a>
<li>        <a href="chp05-02.htm#05-02-04-04">5.2.4.4  Read/Write and User/Supervisor Bits</a>
<li>    <a href="chp05-02.htm#05-02-05">5.2.5  Page Translation Cache</a>
<li><a href="chp05-02.htm#05-03">5.3  Combining Segment and Page Translation</a>
<li>    <a href="chp05-02.htm#05-03-01">5.3.1  "Flat" Architecture</a>
<li>    <a href="chp05-02.htm#05-03-02">5.3.2  Segments Spanning Several Pages</a>
<li>    <a href="chp05-02.htm#05-03-03">5.3.3  Pages Spanning Several Segments</a>
<li>    <a href="chp05-02.htm#05-03-04">5.3.4  Non-Aligned Page and Segment Boundaries</a>
<li>    <a href="chp05-02.htm#05-03-05">5.3.5  Aligned Page and Segment Boundaries</a>
<li>    <a href="chp05-02.htm#05-03-06">5.3.6  Page-Table per Segment</a>
<li><a href="chp05-00.htm#F-05-01">Figure  5-1.   Address Translation Overview</a>
<li><a href="chp05-01.htm#F-05-02">Figure  5-2.   Segment Translation</a>
<li><a href="chp05-01.htm#F-05-03">Figure  5-3.   General Segment-Descriptor Format</a>
<li><a href="chp05-01.htm#F-05-04">Figure  5-4.   Format of Not-Present Descriptor</a>
<li><a href="chp05-01.htm#F-05-05">Figure  5-5.   Descriptor Tables</a>
<li><a href="chp05-01.htm#F-05-06">Figure  5-6.   Format of a Selector</a>
<li><a href="chp05-01.htm#F-05-07">Figure  5-7.   Segment Registers</a>
<li><a href="chp05-02.htm#F-05-08">Figure  5-8.   Format of a Linear Address</a>
<li><a href="chp05-02.htm#F-05-09">Figure  5-9.   Page Translation</a>
<li><a href="chp05-02.htm#F-05-10">Figure  5-10.  Format of a Page Table Entry</a>
<li><a href="chp05-02.htm#F-05-11">Figure  5-11.  Invalid Page Table Entry</a>
<li><a href="chp05-02.htm#F-05-12">Figure  5-12.  80306 Addressing Machanism</a>
<li><a href="chp05-02.htm#F-05-13">Figure  5-13.  Descriptor per Page Table</a>
</ul>
<hr>
Prev: <a href="chp04-02.htm">4.2  Systems Instructions</a><br><br>
Next: <a href="chp05-01.htm">5.1  Segment Translation</a>
</body>
</html>
