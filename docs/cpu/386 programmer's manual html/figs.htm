<html>
<head>
<title>
Figures
</title>
<body>
Prev: <a href="toc.htm">Table of Contents</a><br>
Next: <a href="tabs.htm">Tables</a>
<hr>
<h2>
Figures
</h2>

<li><a href="chp01-03.htm#F-01-01">Figure  1-1.   Example Data Structure</a>
<li><a href="chp02-02.htm#F-02-01">Figure  2-1.   Two-Component Pointer</a>
<li><a href="chp02-02.htm#F-02-02">Figure  2-2.   Fundamental Data Types</a>
<li><a href="chp02-02.htm#F-02-03">Figure  2-3.   Bytes, Words, and Doublewords in Memory</a>
<li><a href="chp02-02.htm#F-02-04">Figure  2-4.   80386 Data Types</a>
<li><a href="chp02-03.htm#F-02-05">Figure  2-5.   80386 Applications Register Set</a>
<li><a href="chp02-03.htm#F-02-06">Figure  2-6.   Use of Memory Segmentation</a>
<li><a href="chp02-03.htm#F-02-07">Figure  2-7.   80386 Stack</a>
<li><a href="chp02-03.htm#F-02-08">Figure  2-8.   EFLAGS Register  </a>
<li><a href="chp02-03.htm#F-02-09">Figure  2-9.   Instruction Pointer Register</a>
<li><a href="chp02-05.htm#F-02-10">Figure  2-10.  Effective Address Computation</a>
<li><a href="chp03-01.htm#F-03-01">Figure  3-1.   PUSH</a>
<li><a href="chp03-01.htm#F-03-02">Figure  3-2.   PUSHA</a>
<li><a href="chp03-01.htm#F-03-03">Figure  3-3.   POP</a>
<li><a href="chp03-01.htm#F-03-04">Figure  3-4.   POPA</a>
<li><a href="chp03-01.htm#F-03-05">Figure  3-5.   Sign Extension</a>
<li><a href="chp03-04.htm#F-03-06">Figure  3-6.   SAL and SHL</a>
<li><a href="chp03-04.htm#F-03-07">Figure  3-7.   SHR</a>
<li><a href="chp03-04.htm#F-03-08">Figure  3-8.   SAR</a>
<li><a href="chp03-04.htm#F-03-09">Figure  3-9.   Using SAR to Simulate IDIV</a>
<li><a href="chp03-04.htm#F-03-10">Figure  3-10.  Shift Left Double</a>
<li><a href="chp03-04.htm#F-03-11">Figure  3-11.  Shift Right Double</a>
<li><a href="chp03-04.htm#F-03-12">Figure  3-12.  ROL</a>
<li><a href="chp03-04.htm#F-03-13">Figure  3-13.  ROR</a>
<li><a href="chp03-04.htm#F-03-14">Figure  3-14.  RCL</a>
<li><a href="chp03-04.htm#F-03-15">Figure  3-15.  RCR</a>
<li><a href="chp03-07.htm#F-03-16">Figure  3-16.  Formal Definition of the ENTER Instruction</a>
<li><a href="chp03-07.htm#F-03-17">Figure  3-17.  Variable Access in Nested Procedures</a>
<li><a href="chp03-07.htm#F-03-18">Figure  3-18.  Stack Frame for MAIN at Level 1</a>
<li><a href="chp03-07.htm#F-03-19">Figure  3-19.  Stack Frame for Procedure A</a>
<li><a href="chp03-07.htm#F-03-20">Figure  3-20.  Stack Frame for Procedure B at Level 3 Called from A</a>
<li><a href="chp03-07.htm#F-03-21">Figure  3-21.  Stack Frame for Procedure C at Level 3 Called from B</a>
<li><a href="chp03-08.htm#F-03-22">Figure  3-22.  LAHF and SAHF</a>
<li><a href="chp03-09.htm#F-03-23">Figure  3-23.  Flag Format for PUSHF and POPF</a>
<li><a href="chp04-01.htm#F-04-01">Figure  4-1.   System Flags of EFLAGS Register</a>
<li><a href="chp04-01.htm#F-04-02">Figure  4-2.   Control Registers</a>
<li><a href="chp05-00.htm#F-05-01">Figure  5-1.   Address Translation Overview</a>
<li><a href="chp05-01.htm#F-05-02">Figure  5-2.   Segment Translation</a>
<li><a href="chp05-01.htm#F-05-03">Figure  5-3.   General Segment-Descriptor Format</a>
<li><a href="chp05-01.htm#F-05-04">Figure  5-4.   Format of Not-Present Descriptor</a>
<li><a href="chp05-01.htm#F-05-05">Figure  5-5.   Descriptor Tables</a>
<li><a href="chp05-01.htm#F-05-06">Figure  5-6.   Format of a Selector</a>
<li><a href="chp05-01.htm#F-05-07">Figure  5-7.   Segment Registers</a>
<li><a href="chp05-02.htm#F-05-08">Figure  5-8.   Format of a Linear Address</a>
<li><a href="chp05-02.htm#F-05-09">Figure  5-9.   Page Translation</a>
<li><a href="chp05-02.htm#F-05-10">Figure  5-10.  Format of a Page Table Entry</a>
<li><a href="chp05-02.htm#F-05-11">Figure  5-11.  Invalid Page Table Entry</a>
<li><a href="chp05-02.htm#F-05-12">Figure  5-12.  80306 Addressing Machanism</a>
<li><a href="chp05-02.htm#F-05-13">Figure  5-13.  Descriptor per Page Table</a>
<li><a href="chp06-03.htm#F-06-01">Figure  6-1.   Protection Fields of Segment Descriptors</a>
<li><a href="chp06-03.htm#F-06-02">Figure  6-2.   Levels of Privilege</a>
<li><a href="chp06-03.htm#F-06-03">Figure  6-3.   Privilege Check for Data Access</a>
<li><a href="chp06-03.htm#F-06-04">Figure  6-4.   Privilege Check for Control Transfer without Gate</a>
<li><a href="chp06-03.htm#F-06-05">Figure  6-5.   Format of 80386 Call Gate</a>
<li><a href="chp06-03.htm#F-06-06">Figure  6-6.   Indirect Transfer via Call Gate</a>
<li><a href="chp06-03.htm#F-06-07">Figure  6-7.   Privilege Check via Call Gate</a>
<li><a href="chp06-03.htm#F-06-08">Figure  6-8.   Initial Stack Pointers of TSS</a>
<li><a href="chp06-03.htm#F-06-09">Figure  6-9.   Stack Contents after an Interlevel Call</a>
<li><a href="chp06-04.htm#F-06-10">Figure  6-10.  Protection Fields of Page Table Entries</a>
<li><a href="chp07-01.htm#F-07-01">Figure  7-1.   80386 32-Bit Task State Segment</a>
<li><a href="chp07-02.htm#F-07-02">Figure  7-2.   TSS Descriptor for 32-bit TSS</a>
<li><a href="chp07-03.htm#F-07-03">Figure  7-3.   Task Register </a>
<li><a href="chp07-04.htm#F-07-04">Figure  7-4.   Task Gate Descriptor</a>
<li><a href="chp07-04.htm#F-07-05">Figure  7-5.   Task Gate Indirectly Identifies Task</a>
<li><a href="chp08-02.htm#F-08-01">Figure  8-1.   Memory-Mapped I/O</a>
<li><a href="chp08-03.htm#F-08-02">Figure  8-2.   I/O Address Bit Map</a>
<li><a href="chp09-04.htm#F-09-01">Figure  9-1.   IDT Register and Table</a>
<li><a href="chp09-04.htm#F-09-02">Figure  9-2.   Pseudo-Descriptor Format for LIDT and SIDT</a>
<li><a href="chp09-05.htm#F-09-03">Figure  9-3.   80306 IDT Gate Descriptors</a>
<li><a href="chp09-06.htm#F-09-04">Figure  9-4.   Interrupt Vectoring for Procedures</a>
<li><a href="chp09-06.htm#F-09-05">Figure  9-5.   Stack Layout after Exception of Interrupt </a>
<li><a href="chp09-06.htm#F-09-06">Figure  9-6.   Interrupt Vectoring for Tasks</a>
<li><a href="chp09-07.htm#F-09-07">Figure  9-7.   Error Code Format</a>
<li><a href="chp09-08.htm#F-09-08">Figure  9-8.   Page-Fault Error Code Format</a>
<li><a href="chp09-08.htm#F-09-09">Figure  9-9.   CR2 Format</a>
<li><a href="chp10-01.htm#F-10-01">Figure 10-1.   Contents of EDX after RESET</a>
<li><a href="chp10-01.htm#F-10-02">Figure 10-2.   Initial Contents of CR0</a>
<li><a href="chp10-06.htm#F-10-03">Figure 10-3.   TLB Structure</a>
<li><a href="chp10-06.htm#F-10-04">Figure 10-4.   Test Registers</a>
<li><a href="chp12-02.htm#F-12-01">Figure 12-1.   Debug Registers</a>
<li><a href="chp14-01.htm#F-14-01">Figure 14-1.   Real-Address Mode Address Formation</a>
<li><a href="chp15-01.htm#F-15-01">Figure 15-1.   V86 Mode Address Formation</a>
<li><a href="chp15-03.htm#F-15-02">Figure 15-2.   Entering and Leaving the 8086 Program</a>
<li><a href="chp16-04.htm#F-16-01">Figure 16-1.   Stack after Far 16-Bit and 32-Bit Calls</a>
<li><a href="chp17-02.htm#F-17-01">Figure 17-1.   80386 Instruction Format</a>
<li><a href="chp17-02.htm#F-17-02">Figure 17-2.   ModR/M and SIB Byte Formats</a>
<li><a href="chp17-02.htm#F-17-03">Figure 17-3.   Bit Offset for BIT[EAX, 21]</a>
<li><a href="chp17-02.htm#F-17-04">Figure 17-4.   Memory Bit Indexing</a>
</ul><hr>
Prev: <a href="toc.htm">Table of Contents</a><br>
Next: <a href="tabs.htm">Tables</a>
</body>
</html>
