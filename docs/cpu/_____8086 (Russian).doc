                    МИКРОПРОЦЕССОР  8086.
                    ---------------------


                 СТРУКТУРА   МИКРОПРОЦЕССОРА.

              Четырнадцатъ 16-разрядных регистров.
  ------------------                   ------------------
  |  AH   |  AL    | AX                |                | CS
  ------------------                   ------------------
  ------------------                   ------------------
  |  BH   |  BL    | BX                |                | DS
  ------------------                   ------------------
  ------------------                   ------------------
  |  CH   |  CL    | CX                |                | SS
  ------------------                   ------------------
  ------------------                   ------------------
  |  DH   |  DL    | DX                |                | ES
  ------------------                   ------------------
  ------------------
  |                | SP       15     11  10  9  8 7  6     4     2     0
  ------------------           -------------------------------------------
  ------------------           |*****|OF|DF|IF|TF|SF|ZF| *|AF| *|PF| *|CF|
  |                | BP        -------------------------------------------
  ------------------                           FLAGS
  ------------------
  |                | SI
  ------------------                   -----------------
  ------------------                   |               |  IP
  |                | DI                -----------------
  ------------------

          1)AX,BX,CX,DX- Регистры данных (AH,AL,BH,BL,CH,CL,DH,DL-байтные
            регистры).
          2)SP,BP,SI,DI- Регистры адресные.
               SP- Указателъ стека.
               BP- Базовый регистр.
               SI,DI- Индексные регистры.
          3)CS,DS,SS,ES- Сегментные регистры.
               CS- Сегмент программ.
               DS- Сегмент данных.
               SS- Сегмент стековый.
               ES- Сегмент дополнителъный.
          4)IP- Указателъ команд.
          5)FLAGS- Регистр флажков.
               CF- Перенос.
               PF- Четностъ (1-если колличество единиц четное).
               AF- Дополнителъный перенос (для десятичных операций).
               ZF- Нулевой резулътат.
               SF- Знак.
               TF- Трассировка (прерывание после каждой операции).
               IF- Разрешение обработки прерываний INTR.
               DF- 1-автодекремент;0-автоинкремент.
               OF- Переполнение.


                  ПСЕВДОКОМАНДЫ АССЕМБЛЕРА ASM-86.
------------------------------------------------------------------------------
     НАИМЕНОВАНИЕ            |         ВЫПОЛНЯЕМОЕ    ДЕЙСТВИЕ
------------------------------------------------------------------------------
         EQU                 |  Присвоение символу значения операнда.
                             |
         DB                  |  Определение одного байта данных.
                             |
         DW                  |  Определение одного слова данных.
                             |
         DD                  |  Определение двойного слова данных.
                             |
         SEGMENT             |  Начало логического сегмента.
                             |
         ENDS                |  Конец логического сегмента.
                             |
         ASSUME              |  Указание ассемблеру содержимого сегментного
                             |  регистра,которое будет установлено во время
                             |  выполнения программы.
                             |
         ORG                 |  Указание абсолютного адреса начала программы
                             |  внутри логического сегмента.
                             |
         PROC                |  Начало определения процедуры.
                             |
         ENDP                |  Конец опрделения процедуры.
                             |
         EXTRN               |  Определение внешнего символа.
                             |
         END                 |  Конец программы,подлежащей трансляции.
                             |
-----------------------------------------------------------------------------
                   Примечание: Знак "?" является признаком переменной,началъ-
                              ное значение которой не определяется.



                 ТИПЫ СИМВОЛОВ В АССЕМБЛЕРЕ ASM-86.

        BYTE PTR - 16-разрядное смещение,т.е. адрес в сегменте для переменной,
                   занимающей в памяти 1 байт.
        WORD PTR - то же,но одно слово.

        DWORD PTR - то же,но два слова.

        NEAR PTR - 16-разрядное смещение,на которое может бытъ выполнен пере-
                   ход с помощъю внутрисегментных команд перехода и вызова
                   подпрограмм.

        FAR PTR -  то же,но толъко с помощъю межсегментных команд.

        NUMBER -   значением символа этого типа является произволъное 16-раз-
                   рядное число.

  
                 СПЕЦИАЛЪНЫЕ ОПЕРАТОРЫ ПРЕОБРАЗОВАНИЯ.

------------------------------------------------------------------------------
    ОПЕРАТОР       |  ПРЕОБРАЗОВАНИЕ ИЗ ТИПА В ТИП |      ПРИМЕЧАНИЕ
------------------------------------------------------------------------------
    OFFSET         |       PTR ---> NUMBER         | 16-разрядное смещение в
                   |                               | сегменте.
                   |                               |
    SEG            |       PTR ---> NUMBER         | 16-разрядный базовый ад-
                   |                               | рес сегмента.
                   |                               |
    SIZE           | Данные PTR ---> NUMBER        | Число байтов,выделенных
                   |                               | для данных.
                   |                               |
    LENGTH         | Данные PTR ---> NUMBER        | Число байтов,слов,двой-
                   |                               | ных слов.
                   |                               |
    BYTE PTR       |  PTR or NUMBER ---> BYTE PTR  | Имя сегмента сохраняется.
                   |                               |
    WORD PTR       |  PTR or NUMBER ---> WORD PTR  |      То же
                   |                               |
    DWORD PTR      |  PTR or NUMBER ---> DWORD PTR |      То же
                   |                               |
    NEAR PTR       |  PTR or NUMBER ---> NEAR PTR  |      То же
                   |                               |
    FAR PTR        |  PTR or NUMBER ---> FAR PTR   |      То же
------------------------------------------------------------------------------



      СПОСОБЫ АДРЕСАЦИИ И СИСТЕМА ОБОЗНАЧЕНИЙ,ИСПОЛЪЗУЕМЫЕ ДЛЯ 8086.

------------------------------------------------------------------------------
 Способ    адресации | Обозначение способа адресации |        Операнд
------------------------------------------------------------------------------
  РЕГИСТРОВАЯ        |        reg                    |        reg
                     |                               |
  НЕПОСРЕДСТВЕННАЯ   |          n                    |         n
                     |                               |
  АБСОЛЮТНАЯ         |        addr16                 |     MEM [addr16]
                     |                               |
  КОСВЕННАЯ РЕГИСТ-  |        [rireg]                |     MEM [rireg]
  РОВАЯ              |                               |
                     |                               |
  ПО БАЗЕ            |       [bireg].disp8           |     MEM [bireg+disp8]
  (8-разрядное смеще-|   или [bireg+disp8]           |
   ние)              |                               |
                     |                               |
  ПО БАЗЕ или С ИН-  |       [bireg].disp16          |   MEM [bireg+disp16]
  ДЕКСИРОВАНИЕМ      |   или addr16[bireg]           |          или
  (16-разрядное сме- |   или [bireg+disp16]          |   MEM [addr16+bireg]
   щение)            |   или [addr16+bireg]          |
                     |                               |
  ПО БАЗЕ С ИНДЕКСИ- |       [breg][ireg]            |   MEM [breg+ireg]
  РОВАНИЕМ           |   или [breg+ireg]             |
 (без смещения)      |                               |
                     |                               |
  ПО БАЗЕ С ИНДЕКСИ- |       [breg].disp8[ireg]      |  MEM [breg+disp8+ireg]
  РОВАНИЕМ           |   или [breg+disp8+ireg]       |
 (8-разрядное смеще- |                               |
  ние)               |                               |
                     |                               |
  ПО БАЗЕ С ИНДЕКСИ- |       [breg].disp16[ireg]     | MEM [breg+disp16+ireg]
  РОВАНИЕМ           |   или [breg+disp16+ireg]      |
 (16-разрядное сме-  |                               |
  щение)             |                               |
------------------------------------------------------------------------------
              ПРИМЕЧАНИЕ: 1) "reg" -  AX-DI-регистры,исполъзуемые в командах,
                             операндами которых являются слова; AH-DL-регис-
                             тры для команд над байтами.

                          2) "rireg" - регистры BX,SI или DI.

                          3) "bireg" - регистры BX,BP,SI или DI.

                          4) "breg" -  регистры BX или BP.

                          5) "ireg" - регистры SI или DI.

                          6) "n"    - обозначение выражения типа NUMBER.

                          7) "MEM [x]" - обозначает байт или слово памяти с
                             физическим адресом,равным x+segbase,где segbase-
                             началъный физический адрес сегмента,содержащий-
                             ся в одном из сегментных регистров.

                          8) "addr16" - обозначение типа PTR,значением кото-
                             рого является логический адрес в сегменте,дос-
                             тупном в данный момент через один из сегментных
                             регистров в соответствии с последней по порядку
                             выполнения командой ASSUME.

                          9) "disp8" - обозначение выражения типа NUMBER,
                             значение которого равно 8-разрядному смещению
                             в диапазоне от -128 до +127.

                         10) "disp16" - то же самое,но 16-разрядное в диапа-
                             зоне от -32768 до +32767.



           ПРЕОБРАЗОВАНИЕ ЛОГИЧЕСКОГО АДРЕСА В ФИЗИЧЕСКИЙ.

               15                  0
               -----------------------------
               | Сегментный регистр | 0000 |
               -----------------------------
                    15                     0
             +      ------------------------
                    |  Смещение в сегменте |
                    ------------------------
          ----------------------------------------
               19                          0
               -----------------------------
               |    Физический  адрес      |
               -----------------------------


            СЕГМЕНТНЫЕ РЕГИСТРЫ, ИСПОЛЪЗУЕМЫЕ ПРИ ОБРАЩЕНИИ К ПАМЯТИ.

------------------------------------------------------------------------------
 ВИД ОБРАЩЕНМЯ К ПАМЯТИ | РЕГИСТР ПО УМОЛЧАНИЮ | ВАРИАНТЫ | ЛОГИЧЕСКИЙ АДРЕС
------------------------------------------------------------------------------
 Выборка команды.       |       CS             |  Нет     |       IP
                        |                      |          |
 Операции со стеком.    |       SS             |  Нет     |       SP
                        |                      |          |
 Обращение к переменной |       DS             | CS,ES,SS | Исполнителъный
(кроме перечисленных    |                      |          |     адрес
 ниже).                 |                      |          |
                        |                      |          |
 Исполъзование BP в ка- |       SS             | CS,ES,DS | Исполнителъный
 честве базового ре-    |                      |          |     адрес.
 гистра.                |                      |          |
                        |                      |          |
 Обращение к исходной   |       DS             | CS,ES,SS |       SI
 строке.                |                      |          |
                        |                      |          |
 Обращение к строке-ре- |       ES             |  Нет     |       DI
 зулътату.              |                      |          |
------------------------------------------------------------------------------


                  СИСТЕМА КОМАНД МИКРОПРОЦЕССОРА 8086.
                  ------------------------------------

                         КОМАНДЫ ПЕРЕСЫЛОК.

------------------------------------------------------------------------------
  МНЕМОНИКА  |   ОПЕРАНДЫ   | РАЗМЕР ОПЕРАНДА |     ОПИСАНИЕ  КОМАНДЫ
------------------------------------------------------------------------------
   MOV       |   dst,src    |    B,W          | Пересылка операнда src по
             |              |                 | адресу операнда dst.
             |              |                 |
   MOV       |   dst,data   |    B,W          | Пересылка непосредственного
             |              |                 | опреанда data по адресу опе-
             |              |                 | ранда dst.
             |              |                 |
   MOV       |   dst,sreg   |    W            | Пересылка сегментного регист-
             |              |                 | ра sreg по адресу операнда
             |              |                 | dst.
             |              |                 |
   MOV       |   sreg,src   |    W            | Пересылка операнда src в
             |              |                 | сегментный регистр sreg.
             |              |                 |
   XCHG      |   dst,reg    |    B,W          | Обмен содержимым между опе-
             |              |                 | рандами dsr и reg.
             |              |                 |
   PUSH      |   src        |    W            | Загрузка операнда src в стек.
             |              |                 |
   PUSH      |   sreg       |    W            | Загрузка содержимого сегмент-
             |              |                 | ного регистра sreg в стек.
             |              |                 |
   PUSHF     |              |    W            | Загрузка содержимого регистра
             |              |                 | FLAGS в стек.
             |              |                 |
   POP       |   dst        |    W            | Пересылка слова из стека по
             |              |                 | адресу операнда dst.
             |              |                 |
   POP       |   sreg       |    W            | Пересылка слова из стека в
             |              |                 | сегментный регистр sreg.
             |              |                 |
   POPF      |              |    W            | Пересылка слова из стека в
             |              |                 | регистр FLAGS.
             |              |                 |
   LAHF      |              |    B            | Загрузка младшего бвйта ре-
             |              |                 | гистра FLAGS в регистр AH.
             |              |                 |
   SAHF      |              |    B            | Загрузка регистра AH в млад-
             |              |                 | ший байт регистра FLAGS.
             |              |                 |
   XLAT      |              |    B            | Загрузка байта MEM [BX+AL] в
             |              |                 | регистр AL.
             |              |                 |
   LEA       |   reg,src    |    W            | Загрузка исполнителъного ад-
             |              |                 | реса операнда src в регистр
             |              |                 | reg.
             |              |                 |
   LDS       |   reg,src    |    D            | Загрузка двойного слова,опре-
             |              |                 | деляемого операндом src,в ре-
             |              |                 | гистры DS и reg.
             |              |                 |
   LES       |   reg,src    |    D            | Загрузка двойного слова,опре-
             |              |                 | деляемого операндом src,в ре-
             |              |                 | гистры ES и reg.
------------------------------------------------------------------------------
                   ПРИМЕЧАНИЯ: 1) B - байт; W - слово; D - двойное слово.

                               2) reg - любой регистр AX-DI для операций
                                  с W или для операций с B регистры AH-DL.

                               3) sreg - любой сегментный регистр CS-ES.

                               4) src,dst - операнды.

                               5) data - непосредственный операнд,который
                                  должен бытъ выражением типа NUMBER.




                         АРИФМЕТИЧЕСКИЕ КОМАНДЫ.

------------------------------------------------------------------------------
 МНЕМОНИКА |  ОПЕРАНДЫ  | РАЗМЕР ОПЕРАНДА |       ОПИСАНИЕ КОМАНДЫ
------------------------------------------------------------------------------
   ADD     |  dst,src   |      B,W        | Сложение операнда src с операн-
           |            |                 | дом dst.
           |            |                 |
   ADD     |  dst,data  |      B,W        | Сложение непосредственного операн-
           |            |                 | да data соперандом dst.
           |            |                 |
   ADC     |  dst,scr   |      B,W        | Сложение с переносом операнда src
           |            |                 | с операндом dst.
           |            |                 |
   ADC     |  dst,data  |      B,W        | Сложение с переносом непосред-
           |            |                 | ственного операнда data с операн-
           |            |                 | дом dst.
           |            |                 |
   SUB     |  dst,src   |      B,W        | Вычитание опранда src из операн-
           |            |                 | да dst.
           |            |                 |
   SUB     |  dst,data  |      B,W        | Вычитание непосредственного опе-
           |            |                 | ранда data из опранда dst.
           |            |                 |
   SBB     |  dst,src   |      B,W        | Вычитание с заемом опранда src
           |            |                 | из операнда dst.
           |            |                 |
   SBB     |  dst,data  |      B,W        | Вычитание с заемом непосредствен-
           |            |                 | ного опранда data из операнда dst.
           |            |                 |
   CMP     |  dst,src   |      B,W        | Сравнение операндов dst и src.
           |            |                 |
   CMP     |  dst,data  |      B,W        | Сравнение операнда dst с непосред-
           |            |                 | ственным операндом data.
           |            |                 |
   INC     |  dst       |      B,W        | Увеличение операнда dst на 1.
           |            |                 |
   DEC     |  dst       |      B,W        | Вычитание 1 из операнда dst.
           |            |                 |
   NEG     |  dst       |      B,W        | Получение дополнителъного кода
           |            |                 | операнда dst.
           |            |                 |
   MUL     |  src       |      B,W        | Умножение без знака содержимого
           |            |                 | регистра AL или AX на операнд src.
           |            |                 |                                                                                                               -
   IMUL    |  src       |      B,W        | Умножение с учетом знака содержи-
           |            |                 | мого регистра AL или AX на опе-
           |            |                 | ранд src.
           |            |                 |
   DIV     |  src       |      B,W        | Деление без учета знака содержи-
           |            |                 | мого регистра {DX,}AX на опе-
           |            |                 | ранд src.
           |            |                 |
   IDIV    |  src       |      B,W        | Деление с учетом знака содержимо-
           |            |                 | го регистра {DX,}AX на операнд
           |            |                 | src.
           |            |                 |
   CBW     |            |      B          | Преобразование байта из регистра
           |            |                 | AL в слово ,резулътат в AX.
           |            |                 |
   CDW     |            |      W          | Преобразование слова из регистра
           |            |                 | AX в двойное слово,резулътат в
           |            |                 | DX и AX.
           |            |                 |
   DAA     |            |      B          | Десятичная коррекция содержимого
           |            |                 | аккумулятора AL при сложении.
           |            |                 |
   DAS     |            |      B          | Десятичная коррекция содержимого
           |            |                 | аккумулятора AL при вычитании.
           |            |                 |
   AAA     |            |      B          | Коррекция содержимого аккумулято-
           |            |                 | ра AL в коде ASCII при сложении.
           |            |                 |
   AAS     |            |      B          | Коррекция содержимого аккумулято-
           |            |                 | ра AL в коде ASCII при вычитании.
           |            |                 |
   AAM     |            |      B          | Коррекция содержимого аккумулято-
           |            |                 | ра AL в коде ASCII при умножении.
           |            |                 |
   AAD     |            |      B          | Коррекция содержимого аккумулято-
           |            |                 | ра AL в коде ASCII при делении.
------------------------------------------------------------------------------
                    ПРИМЕЧАНИЕ : Значения сокращений такие же,как в предыдущей
                                 тавлице.




                  ЛОГИЧЕСКИЕ КОМАНДЫ И КОМАНДЫ СДВИГА.

------------------------------------------------------------------------------
 МНЕМОНИКА |  ОПЕРАНДЫ  | РАЗМЕР ОПЕРАНДА |       ОПИСАНИЕ КОМАНДЫ
------------------------------------------------------------------------------
   AND     |  dst,src   |    B,W          | Логическое умножение операндов
           |            |                 | src и dst.
           |            |                 |
   AND     |  dst,data  |    B,W          | Логическое умножение непосред-
           |            |                 | ственного операнда data на опе-
           |            |                 | ранд dst.
           |            |                 |
   OR      |  dst,src   |    B,W          | Логическое сложение операндов
           |            |                 | src и dst.
           |            |                 |
   OR      |  dst,data  |    B,W          | Логическое сложение непосред-
           |            |                 | ственного операнда data на опе-
           |            |                 | ранд dst.
           |            |                 |
   XOR     |  dst,src   |    B,W          | Операция Исключающее ИЛИ над опе-
           |            |                 | рандами src и dst.
           |            |                 |
   XOR     |  dst,data  |    B,W          | Операция Исключающее ИЛИ над непо-
           |            |                 | средственным операндом data и опе-
           |            |                 | рандом dst.
           |            |                 |
   TEST    |  dst,src   |    B,W          | Установка регистра FLAGS в соот-
           |            |                 | ветствии с резулътатом операции
           |            |                 | src AND dst.
           |            |                 |
   TEST    |  dst,data  |    B,W          | Установка регистра FLAGS в соот-
           |            |                 | ветствии с резулътатом операции
           |            |                 | data AND dst.
           |            |                 |
   NOT     |  dst       |    B,W          | Инвертирование операнда dst.
           |            |                 |
   SHR     |  dst,cnt   |    B,W          | Логический сдвиг операнда dst
           |            |                 | вправо на cnt разрядов.
           |            |                 |
   SHL     |  dst,cnt   |    B,W          | Логический сдвиг операнда dst
           |            |                 | влево на cnt разрядов.
           |            |                 |
   SAL     |  dst,cnt   |    B,W          | Арифметический сдвиг операнда dst
           |            |                 | влево на cnt разрядов.
           |            |                 |
   SAR     |  dst,cnt   |    B,W          | Арифметический сдвиг операнда dst
           |            |                 | вправо на cnt разрядов.
           |            |                 |
   ROL     |  dst,cnt   |    B,W          | Циклический сдвиг операнда dst
           |            |                 | влево  на cnt разрядов.
           |            |                 |
   ROR     |  dst,cnt   |    B,W          | Циклический сдвиг операнда dst
           |            |                 | вправо на cnt разрядов.
           |            |                 |
   RCL     |  dst,cnt   |    B,W          | Циклический сдвиг операнда dst
           |            |                 | влево  на cnt разрядов с исполъ-
           |            |                 | зованием CF.
           |            |                 |
   RCR     |  dst,cnt   |    B,W          | Циклический сдвиг операнда dst
           |            |                 | вправо на cnt разрядов с исполъ-
           |            |                 | зованием CF.
 ------------------------------------------------------------------------------
                       ПРИМЕЧАНИЕ: В случае, когда в поле cnt записывается CL,
                                   выполняется сдвиг посодержимому CL.


                   КОМАНДЫ УПРАВЛЕНИЯ ПРОГРАММОЙ.

-----------------------------------------------------------------------------
    МНЕМОНИКА     |  ОПЕРАНДЫ  |             ОПИСАНИЕ КОМАНДЫ
-----------------------------------------------------------------------------
   JMP            |  addr      | Переход по адресу addr.
                  |            |
   JMP            |  src       | Переход по адресу,определяемому операндом src
                  |            |
   CALL           |  addr      | Вызов подпрограммы по адресу addr.
                  |            |
   CALL           |  src       | Вызов подпрограммы по адресу,определяемому
                  |            | операндом src.
                  |            |
   RET            |            | Возврат из подпрограммы.
                  |            |
   RET            |  n         | Возврат из подпрограммы и увеличение значения
                  |            | указателя стека (SP) на n.
                  |            |
   Jcc            |  addr8     | Условный переход по адресу addr8.
                  |            |
   LOOP           |  addr8     | Уменъшение содержимого регистра CX,переход
                  |            | по адресу addr8,если CX <> 0.
                  |            |
   LOOPE/LOOPZ    |  addr8     | Уменъшение содержимого регистра CX,переход
                  |            | по адресу addr8,если CX <> 0 и ZF=1.
                  |            |
   LOOPNE/LOOPNZ  |  addr8     | Уменъшение содержимого регистра CX,переход
                  |            | по адресу addr8,если CX <> 0 и ZF=0.
                  |            |
   JCXZ           |  addr8     | Переход по адресу addr8,если CX=0.
                  |            |
   CLC            |            | Установка признака переноса в 0 (CF:=0).
                  |            |
   STC            |            | Установка признака переноса в 1 (CF:=1).
                  |            |
   CMC            |            | Инвертирование признака переноса.
                  |            |
   CLD            |            | Установка признака направления в 0 (DF:=0).
                  |            |
   STD            |            | Установка признака направления в 1 (DF:=1).
                  |            |
   CLI            |            | Установка признака разрешения прерывания в
                  |            | 0 (IF:=0).
                  |            |
   STI            |            | Установка признака разрешения прерывания в
                  |            | 1 (IF:=1).
                  |            |
   HLT            |            | Останов и ожидание сигнала сброса или сигна-
                  |            | ла прерывания.
                  |            |
   WAIT           |            | Перевод ЦП в состояние ожидания внешних со-
                  |            | бытий.
                  |            |
   NOP            |            | Нет операции.
                  |            |
   ESC            |  opc,srce  | Выборка кода операции opc и операнда srce
                  |            | для внешнего процессора.
-----------------------------------------------------------------------------
                ПРИМЕЧАНИЯ: 1) "addr" - адрес перехода в текущем или другом
                                сегменте.

                            2) "src" - операнд длиной в слово или два слова.

                            3) "n" - 16-разрядное число,прибавляемое к содер-
                                жимому регистра SP после извлечения из стека
                                адреса возврата.

                            4) "cc" - обозначение кода условия.

                            5) "addr8" - адрес перехода в пределах области
                                текущего сегмента,ограниченный относителъно
                                команды перехода 128-байтовым "расстоянием".

                            6) "opc" - 6-разрядный код операции для внешнего
                                процессора.

                            7) "srce" - операнд для внешнего процессора.


                   КОДЫ УСЛОВИЙ ПЕРЕХОДА (cc).

------------------------------------------------------------------------------
 МНЕМОНИКА |  ПЕРЕХОД,ЕСЛИ           |          УСЛОВИЕ        | ТИП  УСЛОВИЯ
------------------------------------------------------------------------------
  C        | естъ перенос            | CF=1                    | ЗНАЧЕНИЕ
           |                         |                         |  ФЛАЖКА
  NC       | нет переноса            | CF=0                    |
           |                         |                         |
  S        | отрицателъный резулътат | SF=1                    |
           |                         |                         |
  NS       | положителъный резулътат | SF=0                    |
           |                         |                         |
  E/Z      | операнды равны/резулътат| ZF=1                    |
           | равен нулю              |                         |
           |                         |                         |
  NE/NZ    | операнды не равны/ре-   | ZF=0                    |
           | зулътат не равен нулю   |                         |
           |                         |                         |
  O        | переполнение            | OF=1                    |
           |                         |                         |
  NO       | нет переполнения        | OF=0                    |
           |                         |                         |
  P/PE     | четно                   | PF=1                    |
           |                         |                         |
  NP/PO    | нечетно                 | PF=0                    |
------------------------------------------------------------------------------
  L/NGE    | менъше/не больше и не   | SF XOR OF=1             | ЧИСЛА СО
           | равно                   |                         |   ЗНАКОМ
           |                         |                         |
  GE/NL    | болъше или равно/не     | SF XOR OF=0             |
           | менъше                  |                         |
           |                         |                         |
  LE/NG    | менъше или равно/не     | (SF XOR OF) OR ZF=1     |
           | болъше                  |                         |
           |                         |                         |
  G/NLE    | болъше/не менъше и не   | (SF XOR OF) OR ZF=0     |
           | равно                   |                         |
------------------------------------------------------------------------------
  B/NAE    | менъше/не больше и не   | CF=1                    |  ЧИСЛА БЕЗ
           | равно                   |                         |     ЗНАКА
           |                         |                         |
  AE/NB    | болъше или равно/не     | CF=0                    |
           | менъше                  |                         |
           |                         |                         |
  BE/NA    | менъше или равно/не     | CF OR ZF=1              |
           | болъше                  |                         |
           |                         |                         |
  A/NBE    | болъше/не менъше и не   | CF OR ZF=0              |
           | равно                   |                         |
------------------------------------------------------------------------------





                  КОМАНДЫ ОБРАБОТКИ СТРОК И БЛОКОВ ДАННЫХ

------------------------------------------------------------------------------
 МНЕМОНИКА |  ОПЕРАНДЫ  | РАЗМЕР ОПЕРАНДА |       ОПИСАНИЕ КОМАНДЫ
------------------------------------------------------------------------------
 MOVS      | dst,src    |     B,W         | Пересылка элемента строки src
           |            |                 | по адресу операнда dst.
           |            |                 |
 MOVSB     |            |                 | Другие обозначения команды MOVS
 MOVSW     |            |                 | с явным указанием длины операнда.
           |            |                 |
           |            |                 |
 CMPS      | dst,src    |     B,W         | Установка регистра FLAGS в соот-
           |            |                 | ветствии с резулътатом операции.
           |            |                 |
 SCAS      | dst        |     B,W         | Установка регистра FLAGS в соот-
           |            |                 | ветствии с резулътатом операции
           |            |                 | A-dst.
           |            |                 |
 LODS      | src        |     B,W         | Загрузка операнда src в регистр A.
           |            |                 |
 STOS      | dst        |     B,W         | Записъ содержимого регистра A по
           |            |                 | адресу операнда dst.
           |            |                 |
 REP       | minstr     |                 | Выполнение команды minstr,пока
           |            |                 | CX <> 0
           |            |                 |    WHILE CX <> 0 DO BEGIN
           |            |                 |    CX:=CX-1;minstr END
           |            |                 |
 REPE/REPZ | cinstr     |                 | Выполнение команды cinstr, пока
           |            |                 | ZF=1 и CX <> 0
           |            |                 |     WHILE CX <> 0 DO BEGIN
           |            |                 |     CX:=CX-1;cinstr;IF ZF=0
           |            |                 |     THEN EXIT END
           |            |                 |
REPNE/REPNZ| cinstr     |                 | Выполнение команды cinstr, пока
           |            |                 | ZF=0 и CX <> 0
           |            |                 |     WHILE CX <> 0 DO BEGIN
           |            |                 |     CX:=CX-1;cinstr;IF ZF=1
           |            |                 |     THEN EXIT END
------------------------------------------------------------------------------
                  ПРИМЕЧАНИЯ: 1) A - AL или AX.

                              2) "minstr" - общее обозначение команд MOVS,
                                  MOVSB,MOVSW или STOS.

                              3) "cinstr" - обозначение команд CMPS или SCAS.





                КОМАНДЫ ВВОДА-ВЫВОДА И ПРЕРЫВАНИЙ.


------------------------------------------------------------------------------
 МНЕМОНИКА |  ОПЕРАНДЫ  | РАЗМЕР ОПЕРАНДА |       ОПИСАНИЕ КОМАНДЫ
------------------------------------------------------------------------------
  IN       | accum,port |      B,W        | Загрузка в акккмулятор accum со-
           |            |                 | держимого порта port.
           |            |                 |
  IN       | accum,DX   |      B,W        | Загрузка в акккмулятор accum со-
           |            |                 | держимого порта,адресуемого
           |            |                 | по регистру DX.
           |            |                 |
  OUT      | port,accum |      B,W        | Операция обратная IN accum,port.
           |            |                 |
  OUT      | DX,accum   |      B,W        | Операция обратная IN accum,DX.
           |            |                 |
  IRET     |            |                 | Возврат из обработки прерывания.
           |            |                 |
  LOCK     |            |                 | Префикс блокировки шины.
           |            |                 |
  INT      |  3         |                 | Специалъное прерывание с исполъ-
           |            |                 | зованием вектора 3 (прерывание
           |            |                 | по контролъной точке ).
           |            |                 |
  INTO     |            |                 | Специалъное прерывание с исполъ-
           |            |                 | зованием вектора 4 (прерывание
           |            |                 | по переполнению.
           |            |                 |
  INTO     |  v         |                 | Специалъное прерывание с исполъ-
           |            |                 | зованием вектора v.
------------------------------------------------------------------------------
                ПРИМЕЧАНИЯ: 1) "accum" - регистр AL или AX.

                            2) "port" - 8-разрядный номер порта.

                            3) "v" - 8-разрядный номер вектора прерываний.


                ВЕКТОРЫ ПРЕРЫВАНИЙ МИКРОПРОЦЕССОРА 8086.
------------------------------------------------------------------------------
 НОМЕР ВЕКТОРА |  ФИЗИЧЕСКИЙ АДРЕС  |              ПРЕРЫВАНИЕ
------------------------------------------------------------------------------
      0        |     00000          | Специалъное прерывание в случае ошибки
               |                    | при выполнении операции.
               |                    |
      1        |     00004          | Специалъное прерывание для реализации
               |                    | пошаговой работы (при трассировке-от-
               |                    | ладке).
               |                    |
      2        |     00008          | Прерывание типа NMI.
               |                    |
      3        |     0000C          | Специалъное прерывание по контролъной
               |                    | точке (команда INT  3 ).
               |                    |
      4        |     00010          | Специалъное прерывание при переполне-
               |                    | нии (команда INTO ).
               |                    |
    5-31       |  00014-0007C       | Номера иекторов для системы.
               |                    |
   32-255      |  00080-003FC       | Прерывания по вектору,определяемые
               |                    | полъзователем.
------------------------------------------------------------------------------



              СВОДНАЯ ТАБЛИЦА КОМАНД МИКРОПРОЦЕССОРА 8086.

-----------------------------------------------------------------------------
            МНЕМОНИКА               |         ОПИСАНИЕ   КОМАНД
-----------------------------------------------------------------------------
     AAA                    B       | Коррекция содержимого аккумулято-
                                    | ра AL в коде ASCII при сложении.
                                    |
     AAD                    B       | Коррекция содержимого аккумулято-
                                    | ра AL в коде ASCII при делении.
                                    |
     AAM                    B       | Коррекция содержимого аккумулято-
                                    | ра AL в коде ASCII при умножении.
                                    |
     AAS                    B       | Коррекция содержимого аккумулято-
                                    | ра AL в коде ASCII при вычитании.
                                    |
     ADC    dst,src         B,W     | Сложение с переносом операнда src
                                    | с операндом dst.
                                    |
     ADC    dst,data        B,W     | Сложение с переносом непосред-
                                    | ственного операнда data с операн-
                                    | дом dst.
                                    |
     ADD    dst,src         B,W     | Сложение операнда src с операн-
                                    | дом dst.
                                    |
     ADD    dst,data        B,W     | Сложение непосредственного операн-
                                    | да data соперандом dst.
                                    |
     AND    dst,src         B,W     | Логическое умножение операндов
                                    | src и dst.
                                    |
     AND    dst,data        B,W     | Логическое умножение непосред-
                                    | ственного операнда data на опе-
                                    | ранд dst.
                                    |
     CALL   addr                    | Вызов подпрограммы по адресу addr.
                                    |
     CALL   src                     | Вызов подпрограммы по адресу,определяе-
                                    | мому операндом src.
                                    |
     CBW                    B       | Преобразование байта из регистра
                                    | AL в слово ,резулътат в AX.
                                    |
     CDW                    W       | Преобразование слова из регистра
                                    | AX в двойное слово,резулътат в
                                    | DX и AX.
                                    |
     CLC                            | Установка признака переноса в 0 (CF:=0).
                                    |
     CLD                            | Установка признака направления в 0
                                    | (DF:=0).
                                    |
     CLI                            | Установка признака разрешения прерывания
                                    | в 0 (IF:=0).
                                    |
     CMC                            | Инвертирование признака переноса.
                                    |
     CMP    dst,src         B,W     | Сравнение операндов dst и src.
                                    |
     CMP    dst,data        B,W     | Сравнение операнда dst с непосред-
                                    | ственным операндом data.
                                    |
     CMPS   dst,src         B,W     | Установка регистра FLAGS в соот-
                                    | ветствии с резулътатом операции.
                                    |
     DAA                    B       | Десятичная коррекция содержимого
                                    | аккумулятора AL при сложении.
                                    |
     DAS                    B       | Десятичная коррекция содержимого
                                    | аккумулятора AL при вычитании.
                                    |
     DEC    dst             B,W     | Вычитание 1 из операнда dst.
                                    |
     DIV    src             B,W     | Деление без учета знака содержи-
                                    | мого регистра {DX,}AX на опе-
                                    | ранд src.
                                    |
     ESC    opc,srce                | Выборка кода операции opc и операнда srce
                                    | для внешнего процессора.
                                    |
     HLT                            | Останов и ожидание сигнала сброса или
                                    | сигнала прерывания.
                                    |
     IDIV   src             B,W     | Деление с учетом знака содержимо-
                                    | го регистра {DX,}AX на операнд
                                    | src.
                                    |
     IMUL   src             B,W     | Умножение с учетом знака содержи-
                                    | мого регистра AL или AX на опе-
                                    | ранд src.
                                    |
     IN     accum,port      B,W     | Загрузка в акккмулятор accum со-
                                    | держимого порта port.
                                    |
     IN     accum,DX        B,W     | Загрузка в акккмулятор accum со-
                                    | держимого порта,адресуемого
                                    | по регистру DX.
                                    |
     INC    dst             B,W     | Увеличение операнда dst на 1.
                                    |
     INT     3                      | Специалъное прерывание с исполъ-
                                    | зованием вектора 3 (прерывание
                                    | по контролъной точке ).
                                    |
     INTO                           | Специалъное прерывание с исполъ-
                                    | зованием вектора 4 (прерывание
                                    | по переполнению.
                                    |
     INTO    v                      | Специалъное прерывание с исполъ-
                                    | зованием вектора v.
                                    |
     IRET                           | Возврат из обработки прерывания.
                                    |
     Jcc    addr8                   | Условный переход по адресу addr8.
                                    |
     JCXZ   addr8                   | Переход по адресу addr8,если CX=0.
                                    |
     JMP    addr                    | Переход по адресу addr.
                                    |
     JMP    src                     | Переход по адресу,определяемому операн-
                                    | дом scr.
                                    |
     LAHF                   B       | Загрузка младшего бвйта ре-
                                    | гистра FLAGS в регистр AH.
                                    |
     LDS    reg,src         D       | Загрузка двойного слова,опре-
                                    | деляемого операндом src,в ре-
                                    | гистры DS и reg.
                                    |
     LEA    reg,src         W       | Загрузка исполнителъного ад-
                                    | реса операнда src в регистр
                                    | reg.
                                    |
     LES    reg,src         D       | Загрузка двойного слова,опре-
                                    | деляемого операндом src,в ре-
                                    | гистры ES и reg.
                                    |
     LOCK                           | Префикс блокировки шины.
                                    |
     LODS   src             B,W     | Загрузка операнда src в регистр A.
                                    |
     LOOP   addr8                   | Уменъшение содержимого регистра CX,пере-
                                    | ход по адресу addr8,если CX <> 0.
                                    |
LOOPE/LOOPZ addr8                   | Уменъшение содержимого регистра CX,пере-
                                    | ход по адресу addr8,если CX <> 0 и ZF=1.
                                    |
LOOPNE/LOOPNZ addr8                 | Уменъшение содержимого регистра CX,пере-
                                    | ход по адресу addr8,если CX <> 0 и ZF=0.
                                    |
     MOV    dst,src         B,W     | Пересылка операнда src по
                                    | адресу операнда dst.
                                    |
     MOV    dst,data        B,W     | Пересылка непосредственного
                                    | опреанда data по адресу опе-
                                    | ранда dst.
                                    |
     MOV    dst,sreg        W       | Пересылка сегментного регист-
                                    | ра sreg по адресу операнда
                                    | dst.
                                    |
     MOV    sreg,src        W       | Пересылка операнда src в
                                    | сегментный регистр sreg.
                                    |
     MOVS   dst,src         B,W     | Пересылка элемента строки src
                                    | по адресу операнда dst.
                                    |
     MOVSB                          | Другие обозначения команды MOVS
     MOVSW                          | с явным указанием длины операнда.
                                    |
     MUL    src             B,W     | Умножение без знака содержимого
                                    | регистра AL или AX на операнд src.
                                    |
     NEG    dst             B,W     | Получение дополнителъного кода
                                    | операнда dst.
                                    |
     NOP                            | Нет операции.
                                    |
     NOT    dst             B,W     | Инвертирование операнда dst.
                                    |
     OR     dst,src         B,W     | Логическое сложение операндов
                                    | src и dst.
                                    |
     OR     dst,data        B,W     | Логическое сложение непосред-
                                    | ственного операнда data на опе-
                                    | ранд dst.
                                    |
     OUT    port,accum      B,W     | Операция обратная IN accum,port.
                                    |
     OUT    DX,accum        B,W     | Операция обратная IN accum,DX.
                                    |
     POP    dst             W       | Пересылка слова из стека по
                                    | адресу операнда dst.
                                    |
     POP    sreg            W       | Пересылка слова из стека в
                                    | сегментный регистр sreg.
                                    |
     POPF                   W       | Пересылка слова из стека в
                                    | регистр FLAGS.
                                    |
     PUSH   src             W       | Загрузка операнда src в стек.
                                    |
     PUSH   sreg            W       | Загрузка содержимого сегмент-
                                    | ного регистра sreg в стек.
                                    |
     PUSHF                  W       | Загрузка содержимого регистра
                                    | FLAGS в стек.
                                    |
     RCL    dst,cnt         B,W     | Циклический сдвиг операнда dst
                                    | влево  на cnt разрядов с исполъ-
                                    | зованием CF.
                                    |
     RCR    dst,cnt         B,W     | Циклический сдвиг операнда dst
                                    | вправо на cnt разрядов с исполъ-
                                    | зованием CF.
                                    |
     REP    minstr                  | Выполнение команды minstr,пока
                                    | CX <> 0
                                    |    WHILE CX <> 0 DO BEGIN
                                    |    CX:=CX-1;minstr END
                                    |
REPE/REPZ   cinstr                  | Выполнение команды cinstr, пока
                                    | ZF=1 и CX <> 0
                                    |     WHILE CX <> 0 DO BEGIN
                                    |     CX:=CX-1;cinstr;IF ZF=0
                                    |     THEN EXIT END
                                    |
REPNE/REPNZ cinstr                  | Выполнение команды cinstr, пока
                                    | ZF=0 и CX <> 0
                                    |     WHILE CX <> 0 DO BEGIN
                                    |     CX:=CX-1;cinstr;IF ZF=1
                                    |     THEN EXIT END
                                    |
     RET                            | Возврат из подпрограммы.
                                    |
     RET    n                       | Возврат из подпрограммы и увеличение
                                    | значения указателя стека (SP) на n.
                                    |
     ROL    dst,cnt         B,W     | Циклический сдвиг операнда dst
                                    | влево  на cnt разрядов.
                                    |
     ROR    dst,cnt         B,W     | Циклический сдвиг операнда dst
                                    | вправо на cnt разрядов.
                                    |
     SAHF                   B       | Загрузка регистра AH в млад-
                                    | ший байт регистра FLAGS.
                                    |
     SAL    dst,cnt         B,W     | Арифметический сдвиг операнда dst
                                    | влево на cnt разрядов.
                                    |
     SAR     dst,cnt        B,W     | Арифметический сдвиг операнда dst
                                    | вправо на cnt разрядов.
                                    |
     SBB     dst,src        B,W     | Вычитание с заемом опранда src
                                    | из операнда dst.
                                    |
     SBB     dst,data       B,W     | Вычитание с заемом непосредствен-
                                    | ного опранда data из операнда dst.
                                    |
     SCAS    dst            B,W     | Установка регистра FLAGS в соот-
                                    | ветствии с резулътатом операции
                                    | A-dst.
                                    |
     SHL     dst,cnt        B,W     | Логический сдвиг операнда dst
                                    | влево на cnt разрядов.
                                    |
     SHR     dst,cnt        B,W     | Логический сдвиг операнда dst
                                    | вправо на cnt разрядов.
                                    |
     STC                            | Установка признака переноса в 1 (CF:=1).
                                    |
     STD                            | Установка признака направления в 1
                                    | (DF:=1).
                                    |
     STI                            | Установка признака разрешения прерывания
                                    | в 1 (IF:=1).
                                    |
     STOS    dst            B,W     | Записъ содержимого регистра A по
                                    | адресу операнда dst.
                                    |
     SUB     dst,src        B,W     | Вычитание опранда src из операн-
                                    | да dst.
                                    |
     SUB     dst,data       B,W     | Вычитание непосредственного опе-
                                    | ранда data из опранда dst.
                                    |
     TEST    dst,src        B,W     | Установка регистра FLAGS в соот-
                                    | ветствии с резулътатом операции
                                    | src AND dst.
                                    |
     TEST    dst,data       B,W     | Установка регистра FLAGS в соот-
                                    | ветствии с резулътатом операции
                                    | data AND dst.
                                    |
     XCHG    dst,reg        B,W     | Обмен содержимым между опе-
                                    | рандами dsr и reg.
                                    |
     XLAT                   B       | Загрузка байта MEM [BX+AL] в
                                    | регистр AL.
                                    |
     XOR     dst,src        B,W     | Операция Исключающее ИЛИ над опе-
                                    | рандами src и dst.
                                    |
     XOR     dst,data       B,W     | Операция Исключающее ИЛИ над непо-
                                    | средственным операндом data и опе-
                                    | рандом dst.
                                    |
     WAIT                           | Перевод ЦП в состояние ожидания внешних
                                    | событий.
------------------------------------------------------------------------------












